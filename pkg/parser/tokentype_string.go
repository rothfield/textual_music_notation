// Code generated by "stringer -type=TokenType -trimprefix=TokenType"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeUnknown-0]
	_ = x[TokenTypePitch-1]
	_ = x[TokenTypeDash-2]
	_ = x[TokenTypeLeftSlur-3]
	_ = x[TokenTypeRightSlur-4]
	_ = x[TokenTypeBarline-5]
	_ = x[TokenTypeBreath-6]
	_ = x[TokenTypeOctave-7]
	_ = x[TokenTypeMordent-8]
	_ = x[TokenTypeTala-9]
	_ = x[TokenTypeLowerOctave-10]
	_ = x[TokenTypeLowestOctave-11]
	_ = x[TokenTypeUpperOctave-12]
	_ = x[TokenTypeHighestOctave-13]
	_ = x[TokenTypeSyllable-14]
	_ = x[TokenTypeSpace-15]
}

const _TokenType_name = "UnknownPitchDashLeftSlurRightSlurBarlineBreathOctaveMordentTalaLowerOctaveLowestOctaveUpperOctaveHighestOctaveSyllableSpace"

var _TokenType_index = [...]uint8{0, 7, 12, 16, 24, 33, 40, 46, 52, 59, 63, 74, 86, 97, 110, 118, 123}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
